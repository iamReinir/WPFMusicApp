@page "/"
@model PRN_Final.Pages.PlaylistModel
@{
    ViewData["Title"] = "Playlist";
}

<div class="container-fluid mt-5"> 
    @if (Model.SearchResults != null && Model.SearchResults.Count > 0)
    {
        <div class="row">
            @foreach (var track in Model.SearchResults)
            {
                <div class="col-12 col-md-6 col-lg-4 mb-4">
                    <div class="card shadow-sm h-100">
                        <img src="https://i.ytimg.com/vi/@track.YouTubeId/maxresdefault.jpg" class="card-img-top" alt="@track.Title">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@track.Title</h5>
                            <div id="player-@track.YouTubeId"></div>
                            <div class="mt-auto">
                                <div class="btn-group d-flex" role="group">
                                    <button class="btn btn-outline-primary w-100 play-button" onclick="playVideo('@track.YouTubeId')">
                                        <i class="fas fa-play"></i> Play
                                    </button>
                                    <button class="btn btn-outline-secondary w-100 pause-button" onclick="pauseVideo('@track.YouTubeId')">
                                        <i class="fas fa-pause"></i> Pause
                                    </button>                                    
                                </div>                                
                            </div>
                        </div>
                    </div>
                </div>
                <script>
                    console.log(@Html.Raw(Json.Serialize(track)));
                </script>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        var players = {};

        function onYouTubeIframeAPIReady() {
        @if (Model.SearchResults != null && Model.SearchResults.Any())
        {
            foreach (var track in Model.SearchResults)
            {
                <text>
                        players['@track.YouTubeId'] = new YT.Player('player-@track.YouTubeId', {
                            height: '0',
                            width: '0',
                            videoId: '@track.YouTubeId',
                            events: {
                                'onReady': function (event) {
                                    console.log('Player ready for @track.YouTubeId');
                                }
                            }
                        });
                </text>
            }
        }
                }

        function playVideo(playerId) {
            var player = players[playerId];
            if (player && player.playVideo) {
                player.playVideo();
            } else {
                console.error('Player not found for:', playerId);
            }
        }

        function pauseVideo(playerId) {
            var player = players[playerId];
            if (player && player.pauseVideo) {
                player.pauseVideo();
            } else {
                console.error('Player not found for:', playerId);
            }
        }

        // Ensure onYouTubeIframeAPIReady is called
        if (typeof YT !== 'undefined' && YT && YT.loaded) {
            onYouTubeIframeAPIReady();
        }
    </script>
}
